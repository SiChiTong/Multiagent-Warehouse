package warehouse.agents;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONObject;

import jade.core.AID;
import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;
import jade.lang.acl.ACLMessage;
import jade.lang.acl.MessageTemplate;
import jade.wrapper.AgentController;

/**
 * @author Patrick Robinson
 *
 */
public class WarehouseAgent extends Agent {
	private class OrderRequestReceiver extends CyclicBehaviour {
		@Override
		public void action() {
			ACLMessage recMsg = receive(MessageTemplate.MatchPerformative(ACLMessage.REQUEST));
			if(recMsg != null) {
				JSONObject json = new JSONObject(recMsg.getContent());
				Order ordr = new Order();
				ordr.id = json.getInt(id);
				// Confirm Order
				ACLMessage response = new ACLMessage(ACLMessage.CONFIRM);
				Iterator<AID> replyTo = recMsg.getAllReplyTo();
				while(replyTo.hasNext()) {
					AID tmpAID = replyTo.next();
					ordr.requestingAgents.add(tmpAID);
					response.addReceiver(tmpAID);
				}
				response.setLanguage("JSON");
				response.setContent("{id:" + ordr.id + "}");
				send(response);
				// Process Order
				JSONArray jsonOrderList = json.getJSONArray("list");
				for(int i = 0; i < jsonOrderList.length(); i++) {
					JSONObject pair = jsonOrderList.getJSONObject(i);
					String[] keys = JSONObject.getNames(pair);
					ordr.items.add(new Pair<String, Integer>(keys[0], pair.getInt(keys[0])));
				}
				// Create Order Agent and hand over data
				
				AgentController ac = getContainerController().createNewAgent(arg0, arg1, arg2);
				
				unfinishedOrders.put(ordr.id, ordr);
			}
		}
	}
	
	private class Order {
		public AID handlingAgentAddress;
		public List<AID> requestingAgents = new ArrayList<>();
		public int id;
		public List<Pair<String, Integer>> items = new ArrayList<>();
	}
	
	private Map<Integer, Order> unfinishedOrders = new HashMap<>();
	
	protected void setup() {
		this.addBehaviour(new OrderRequestReceiver());
	}
}
